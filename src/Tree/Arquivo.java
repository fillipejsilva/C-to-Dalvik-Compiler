/*
 * Generated by classgen, version 1.3
 * 10/23/12 1:51 PM
 */
package org.tree;

public class Arquivo implements SyntaxNode {

  private SyntaxNode parent;
  public FuncaoBloco fncb;
  public FuncaoPrincipal fncp;

  public Arquivo (FuncaoBloco fncb, FuncaoPrincipal fncp) {
    this.fncb = fncb;
    if (fncb != null) fncb.setParent(this);
    this.fncp = fncp;
    if (fncp != null) fncp.setParent(this);
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (fncb != null) fncb.accept(visitor);
    if (fncp != null) fncp.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (fncb != null) fncb.traverseTopDown(visitor);
    if (fncp != null) fncp.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (fncb != null) fncb.traverseBottomUp(visitor);
    if (fncp != null) fncp.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString() {
    return toString("");
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("Arquivo(\n");
      if (fncb != null)
        buffer.append(fncb.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (fncp != null)
        buffer.append(fncp.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [Arquivo]");
    return buffer.toString();
  }
}
