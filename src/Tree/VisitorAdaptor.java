/*
 * Generated by classgen, version 1.3
 * 26/10/12 17:14
 */
package org.tree;

public abstract class VisitorAdaptor implements Visitor {

  public void visit(FuncaoBloco funcaoBloco) { visit(); }
  public void visit(EntradaFuncao entradaFuncao) { visit(); }
  public void visit(DeclaraLista declaraLista) { visit(); }
  public void visit(Comandos comandos) { visit(); }
  public void visit(Elsis elsis) { visit(); }
  public void visit(ExpressaoLista expressaoLista) { visit(); }
  public void visit(Arquivo arquivo) { visit(); }
  public void visit(Funcao funcao) { visit(); }
  public void visit(FuncaoPrincipal funcaoPrincipal) { visit(); }
  public void visit(Entrada entrada) { visit(); }
  public void visit(Programa programa) { visit(); }
  public void visit(Ret ret) { visit(); }
  public void visit(Declara declara) { visit(); }
  public void visit(Vetor vetor) { visit(); }
  public void visit(InList inList) { visit(); }
  public void visit(Idf idf) { visit(); }
  public void visit(Tipo tipo) { visit(); }
  public void visit(CharTipo charTipo) { visit(); }
  public void visit(IntTipo intTipo) { visit(); }
  public void visit(FloatTipo floatTipo) { visit(); }
  public void visit(VoidTipo voidTipo) { visit(); }
  public void visit(Comando comando) { visit(); }
  public void visit(Print print) { visit(); }
  public void visit(PrintId printId) { visit(); }
  public void visit(Scan scan) { visit(); }
  public void visit(ComandoWhile comandoWhile) { visit(); }
  public void visit(ComandoIf comandoIf) { visit(); }
  public void visit(Atribuicao atribuicao) { visit(); }
  public void visit(VetorAtrib vetorAtrib) { visit(); }
  public void visit(ChamadaFuncao chamadaFuncao) { visit(); }
  public void visit(Expressao expressao) { visit(); }
  public void visit(Igualdade igualdade) { visit(); }
  public void visit(Adicao adicao) { visit(); }
  public void visit(Subtracao subtracao) { visit(); }
  public void visit(Divisao divisao) { visit(); }
  public void visit(Multiplicacao multiplicacao) { visit(); }
  public void visit(MaiorIgual maiorIgual) { visit(); }
  public void visit(MenorIgual menorIgual) { visit(); }
  public void visit(Maior maior) { visit(); }
  public void visit(Menor menor) { visit(); }
  public void visit(Diferente diferente) { visit(); }
  public void visit(E e) { visit(); }
  public void visit(Ou ou) { visit(); }
  public void visit(TermoFuncao termoFuncao) { visit(); }
  public void visit(ExpId expId) { visit(); }
  public void visit(TermoParenteses termoParenteses) { visit(); }
  public void visit(TermoNegacao termoNegacao) { visit(); }
  public void visit(ExpChar expChar) { visit(); }
  public void visit(ExpInt expInt) { visit(); }
  public void visit(ExpFloat expFloat) { visit(); }
  public void visit(UsoVetor usoVetor) { visit(); }

  public void visit() { }

}
